{"version":3,"file":"Swup.modern.js","sources":["../src/helpers/classify.ts","../src/helpers/getCurrentUrl.ts","../src/helpers/createHistoryRecord.ts","../src/helpers/updateHistoryRecord.ts","../src/helpers/delegateEvent.ts","../src/utils/index.ts","../src/helpers/getDataFromHtml.ts","../src/helpers/fetch.ts","../src/helpers/Location.ts","../src/helpers/markSwupElements.ts","../src/helpers/cleanupAnimationClasses.ts","../src/modules/Cache.ts","../src/modules/enterPage.ts","../src/modules/getAnchorElement.ts","../src/modules/getAnimationPromises.ts","../src/modules/getPageData.ts","../src/modules/fetchPage.ts","../src/modules/leavePage.ts","../src/modules/loadPage.ts","../src/modules/replaceContent.ts","../src/modules/events.ts","../src/modules/plugins.ts","../src/modules/renderPage.ts","../src/modules/transitions.ts","../src/Swup.ts"],"sourcesContent":["export const classify = (text: string, fallback?: string): string => {\n\tconst output = String(text)\n\t\t.toLowerCase()\n\t\t// .normalize('NFD') // split an accented letter in the base letter and the acent\n\t\t// .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n\t\t.replace(/[\\s/_.]+/g, '-') // replace spaces and _./ with '-'\n\t\t.replace(/[^\\w-]+/g, '') // remove all non-word chars\n\t\t.replace(/--+/g, '-') // replace repeating '-' with single '-'\n\t\t.replace(/^-+|-+$/g, ''); // trim '-' from edges\n\treturn output || fallback || '';\n};\n","export const getCurrentUrl = ({ hash }: { hash?: boolean } = {}): string => {\n\treturn location.pathname + location.search + (hash ? location.hash : '');\n};\n","import { getCurrentUrl } from './getCurrentUrl';\n\nexport const createHistoryRecord = (\n\turl: string,\n\tcustomData: Record<string, unknown> = {}\n): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst data = {\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...customData\n\t};\n\thistory.pushState(data, '', url);\n};\n","import { getCurrentUrl } from './getCurrentUrl';\n\nexport const updateHistoryRecord = (\n\turl: string | null = null,\n\tcustomData: Record<string, unknown> = {}\n): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst data = {\n\t\t...history.state,\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...customData\n\t};\n\thistory.replaceState(data, '', url);\n};\n","import delegate, { EventType } from 'delegate-it';\nimport { ParseSelector } from 'typed-query-selector/parser';\n\nexport type Unsubscribe = {\n\tdestroy: () => void;\n};\nexport const delegateEvent = <Selector extends string, TEvent extends EventType>(\n\tselector: Selector,\n\ttype: TEvent,\n\tcallback: delegate.EventHandler<GlobalEventHandlersEventMap[TEvent]>,\n\t{ base = document, ...eventOptions } = {}\n): Unsubscribe => {\n\tconst delegation = delegate<string, ParseSelector<Selector, HTMLElement>, TEvent>(\n\t\tbase,\n\t\tselector,\n\t\ttype,\n\t\tcallback,\n\t\teventOptions\n\t);\n\treturn { destroy: () => delegation.destroy() };\n};\n","export const query = (selector: string, context: Document | Element = document) => {\n\treturn context.querySelector<HTMLElement>(selector);\n};\n\nexport const queryAll = (\n\tselector: string,\n\tcontext: Document | Element = document\n): HTMLElement[] => {\n\treturn Array.from(context.querySelectorAll(selector));\n};\n\nexport const nextTick = (callback: () => void) => {\n\trequestAnimationFrame(() => {\n\t\trequestAnimationFrame(() => {\n\t\t\tcallback();\n\t\t});\n\t});\n};\n\nexport const escapeCssIdentifier = (ident: string) => {\n\t// @ts-ignore this is for support check, so it's correct that TS complains\n\tif (window.CSS && window.CSS.escape) {\n\t\treturn CSS.escape(ident);\n\t} else {\n\t\treturn ident;\n\t}\n};\n\n// Fix for Chrome below v61 formatting CSS floats with comma in some locales\nexport const toMs = (s: string) => {\n\treturn Number(s.slice(0, -1).replace(',', '.')) * 1000;\n};\n","import { query, queryAll } from '../utils';\n\nexport type PageHtmlData = {\n\ttitle: string;\n\toriginalContent: string;\n\tblocks: string[];\n\tpageClass?: string;\n};\n\nexport const getDataFromHtml = (html: string, containers: string[]): PageHtmlData => {\n\tlet fakeDom = document.createElement('html');\n\tfakeDom.innerHTML = html;\n\tlet blocks: string[] = [];\n\n\tcontainers.forEach((selector) => {\n\t\tif (query(selector, fakeDom) == null) {\n\t\t\tconsole.warn(`[swup] Container ${selector} not found on page.`);\n\t\t\treturn null;\n\t\t} else {\n\t\t\tif (queryAll(selector).length !== queryAll(selector, fakeDom).length) {\n\t\t\t\tconsole.warn(`[swup] Mismatched number of containers found on new page.`);\n\t\t\t}\n\t\t\tqueryAll(selector).forEach((item, index) => {\n\t\t\t\tqueryAll(selector, fakeDom)[index].setAttribute('data-swup', String(blocks.length));\n\t\t\t\tblocks.push(queryAll(selector, fakeDom)[index].outerHTML);\n\t\t\t});\n\t\t}\n\t});\n\n\tconst title = query('title', fakeDom)?.innerText || '';\n\tconst pageClass = query('body', fakeDom)?.className;\n\n\t// to prevent memory leaks\n\tfakeDom.innerHTML = '';\n\t// @ts-ignore don't want to type it as possible null, since it's created at the top of the function always\n\tfakeDom = null;\n\n\treturn { title, pageClass, blocks, originalContent: html };\n};\n","import { TransitionOptions } from '../modules/loadPage';\nimport { Options } from '../Swup';\n\nexport const fetch = (\n\toptions: TransitionOptions & { headers: Options['requestHeaders'] },\n\tcallback: (request: XMLHttpRequest) => void\n): XMLHttpRequest => {\n\tconst defaults = {\n\t\turl: window.location.pathname + window.location.search,\n\t\tmethod: 'GET',\n\t\tdata: null,\n\t\theaders: {}\n\t};\n\n\tconst { url, method, headers, data } = { ...defaults, ...options };\n\n\tconst request = new XMLHttpRequest();\n\n\trequest.onreadystatechange = function () {\n\t\tif (request.readyState === 4) {\n\t\t\t// if (request.status === 500) {} else {}\n\t\t\tcallback(request);\n\t\t}\n\t};\n\n\trequest.open(method, url, true);\n\tObject.entries(headers).forEach(([key, header]) => {\n\t\trequest.setRequestHeader(key, header);\n\t});\n\trequest.send(data);\n\n\treturn request;\n};\n","/**\n * A helper for creating a Location from either an element\n * or a URL object/string\n *\n */\n\nexport class Location extends URL {\n\tconstructor(url: string, base: string = document.baseURI) {\n\t\tsuper(url.toString(), base);\n\t}\n\n\tget url() {\n\t\treturn this.pathname + this.search;\n\t}\n\n\t/**\n\t * Instantiate a Location from an element's href attribute\n\t * @param {Element} el\n\t * @return new Location instance\n\t */\n\tstatic fromElement(el: HTMLAnchorElement): Location {\n\t\tconst href = el.getAttribute('href') || el.getAttribute('xlink:href');\n\t\treturn new Location(href!);\n\t}\n\n\t/**\n\t * Instantiate a Location from a URL object or string\n\t * @param {URL|string} url\n\t * @return new Location instance\n\t */\n\tstatic fromUrl(url: string): Location {\n\t\treturn new Location(url);\n\t}\n}\n","import { query, queryAll } from '../utils';\n\nexport const markSwupElements = (element: Element, containers: string[]): void => {\n\tlet blocks = 0;\n\n\tcontainers.forEach((selector) => {\n\t\tif (query(selector, element) == null) {\n\t\t\tconsole.warn(`[swup] Container ${selector} not found on page.`);\n\t\t} else {\n\t\t\tqueryAll(selector).forEach((item: Element, index: number) => {\n\t\t\t\tqueryAll(selector, element)[index].setAttribute('data-swup', String(blocks));\n\t\t\t\tblocks++;\n\t\t\t});\n\t\t}\n\t});\n};\n","export const isSwupClass = (className: string): boolean =>\n\t/^to-/.test(className) || ['is-changing', 'is-rendering', 'is-popstate'].includes(className);\n\nexport const cleanupAnimationClasses = (): void => {\n\tconst htmlClasses = document.documentElement.className.split(' ');\n\tconst removeClasses = htmlClasses.filter(isSwupClass);\n\tdocument.documentElement.classList.remove(...removeClasses);\n};\n","import { getCurrentUrl, Location } from '../helpers';\nimport Swup from '../Swup';\nimport { PageData } from './getPageData';\n\nexport interface PageRecord extends PageData {\n\turl: string;\n\tresponseURL: string;\n}\nexport class Cache {\n\tpages: Record<string, PageRecord> = {};\n\tlast: PageRecord | null = null;\n\tswup: Swup;\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\tgetCacheUrl(url: string): string {\n\t\treturn this.swup.resolveUrl(Location.fromUrl(url).url);\n\t}\n\n\tcacheUrl(page: PageRecord) {\n\t\tpage.url = this.getCacheUrl(page.url);\n\t\tif (page.url in this.pages === false) {\n\t\t\tthis.pages[page.url] = page;\n\t\t}\n\t\tpage.responseURL = this.getCacheUrl(page.responseURL);\n\t\tthis.last = this.pages[page.url];\n\t\tthis.swup.log(`Cache (${Object.keys(this.pages).length})`, this.pages);\n\t}\n\n\tgetPage(url: string): PageRecord {\n\t\turl = this.getCacheUrl(url);\n\t\treturn this.pages[url];\n\t}\n\n\tgetCurrentPage(): PageRecord {\n\t\treturn this.getPage(getCurrentUrl());\n\t}\n\n\texists(url: string): boolean {\n\t\turl = this.getCacheUrl(url);\n\t\treturn url in this.pages;\n\t}\n\n\tempty(): void {\n\t\tthis.pages = {};\n\t\tthis.last = null;\n\t\tthis.swup.log('Cache cleared');\n\t}\n\n\tremove(url: string): void {\n\t\tdelete this.pages[this.getCacheUrl(url)];\n\t}\n}\n","import { nextTick } from '../utils';\nimport Swup from '../Swup';\nimport { PageRenderOptions } from './renderPage';\n\nexport const enterPage = function (this: Swup, { event, skipTransition }: PageRenderOptions = {}) {\n\tif (skipTransition) {\n\t\tthis.triggerEvent('transitionEnd', event);\n\t\tthis.cleanupAnimationClasses();\n\t\treturn [Promise.resolve()];\n\t}\n\n\tnextTick(() => {\n\t\tthis.triggerEvent('animationInStart');\n\t\tdocument.documentElement.classList.remove('is-animating');\n\t});\n\n\tconst animationPromises = this.getAnimationPromises('in');\n\tPromise.all(animationPromises).then(() => {\n\t\tthis.triggerEvent('animationInDone');\n\t\tthis.triggerEvent('transitionEnd', event);\n\t\tthis.cleanupAnimationClasses();\n\t});\n\treturn animationPromises;\n};\n","import { escapeCssIdentifier, query } from '../utils';\n\nexport const getAnchorElement = (hash: string): Element | null => {\n\tif (!hash) {\n\t\treturn null;\n\t}\n\n\tif (hash.charAt(0) === '#') {\n\t\thash = hash.substring(1);\n\t}\n\n\thash = decodeURIComponent(hash);\n\thash = escapeCssIdentifier(hash);\n\n\t// https://html.spec.whatwg.org/#find-a-potential-indicated-element\n\treturn query(`#${hash}`) || query(`a[name='${hash}']`);\n};\n","import { queryAll, toMs } from '../utils';\nimport Swup from '../Swup';\n\n// Transition property/event sniffing\nlet transitionProp = 'transition';\nlet transitionEndEvent = 'transitionend';\nlet animationProp = 'animation';\nlet animationEndEvent = 'animationend';\n\nif (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {\n\ttransitionProp = 'WebkitTransition';\n\ttransitionEndEvent = 'webkitTransitionEnd';\n}\n\nif (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {\n\tanimationProp = 'WebkitAnimation';\n\tanimationEndEvent = 'webkitAnimationEnd';\n}\n\nexport function getAnimationPromises(\n\tthis: Swup,\n\t// we don't use this argument, but JS plugin depends on it with\n\t// its own version of getAnimationPromises, so it must be specified when\n\t// getAnimationPromises is being used\n\tanimationType: 'in' | 'out'\n): Promise<void>[] {\n\tconst selector = this.options.animationSelector;\n\n\t// Allow usage of swup without animations\n\tif (selector === false) {\n\t\t// Use array of a single resolved promise instead of an empty array to allow\n\t\t// possible future use with Promise.race() which requires an actual value\n\t\treturn [Promise.resolve()];\n\t}\n\n\tconst animatedElements = queryAll(selector, document.body);\n\n\t// Warn if no animated containers found on page, but keep things going\n\tif (!animatedElements.length) {\n\t\tconsole.warn(`[swup] No animated elements found by selector ${selector}`);\n\t\treturn [Promise.resolve()];\n\t}\n\n\treturn animatedElements.map((element) => getAnimationPromiseForElement(element, selector));\n}\n\nconst isTransitionOrAnimationEvent = (event: any): event is TransitionEvent | AnimationEvent =>\n\t!!event.elapsedTime;\n\nfunction getAnimationPromiseForElement(\n\telement: Element,\n\tselector: string,\n\texpectedType: 'animation' | 'transition' | null = null\n): Promise<void> {\n\tconst { type, timeout, propCount } = getTransitionInfo(element, expectedType);\n\n\t// Resolve immediately if no transition defined\n\tif (!type || !timeout) {\n\t\tconsole.warn(\n\t\t\t`[swup] No CSS transition duration defined for element of selector ${selector}`\n\t\t);\n\t\treturn Promise.resolve();\n\t}\n\n\treturn new Promise((resolve) => {\n\t\tconst endEvent = type === 'transition' ? transitionEndEvent : animationEndEvent;\n\t\tconst startTime = performance.now();\n\t\tlet propsTransitioned = 0;\n\n\t\tconst end = () => {\n\t\t\telement.removeEventListener(endEvent, onEnd);\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onEnd: EventListener = (event) => {\n\t\t\t// Skip transitions on child elements\n\t\t\tif (event.target !== element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!isTransitionOrAnimationEvent(event)) {\n\t\t\t\tthrow new Error('Not a transition or animation event.');\n\t\t\t}\n\n\t\t\t// Skip transitions that happened before we started listening\n\t\t\tconst elapsedTime = (performance.now() - startTime) / 1000;\n\t\t\tif (elapsedTime < event.elapsedTime) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// End if all properties have transitioned\n\t\t\tif (++propsTransitioned >= propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tif (propsTransitioned < propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t}, timeout + 1);\n\n\t\telement.addEventListener(endEvent, onEnd);\n\t});\n}\n\nexport function getTransitionInfo(\n\telement: Element,\n\texpectedType: 'animation' | 'transition' | null = null\n) {\n\tconst styles = window.getComputedStyle(element);\n\n\t// not sure what to do about the below mess other than casting, but it's a mess\n\tconst transitionDelay = `${transitionProp}Delay` as keyof CSSStyleDeclaration;\n\tconst transitionDuration = `${transitionProp}Duration` as keyof CSSStyleDeclaration;\n\tconst animationDelay = `${animationProp}Delay` as keyof CSSStyleDeclaration;\n\tconst animationDuration = `${animationProp}Duration` as keyof CSSStyleDeclaration;\n\n\tconst transitionDelays = (\n\t\tstyles[transitionDelay] as CSSStyleDeclaration['transitionDelay']\n\t).split(', ');\n\tconst transitionDurations = (\n\t\t(styles[transitionDuration] || '') as CSSStyleDeclaration['transitionDuration']\n\t).split(', ');\n\tconst transitionTimeout = calculateTimeout(transitionDelays, transitionDurations);\n\n\tconst animationDelays = (\n\t\t(styles[animationDelay] || '') as CSSStyleDeclaration['animationDelay']\n\t).split(', ');\n\tconst animationDurations = (\n\t\t(styles[animationDuration] || '') as CSSStyleDeclaration['animationDuration']\n\t).split(', ');\n\tconst animationTimeout = calculateTimeout(animationDelays, animationDurations);\n\n\tlet type: string | null = '';\n\tlet timeout = 0;\n\tlet propCount = 0;\n\n\tif (expectedType === 'transition') {\n\t\tif (transitionTimeout > 0) {\n\t\t\ttype = 'transition';\n\t\t\ttimeout = transitionTimeout;\n\t\t\tpropCount = transitionDurations.length;\n\t\t}\n\t} else if (expectedType === 'animation') {\n\t\tif (animationTimeout > 0) {\n\t\t\ttype = 'animation';\n\t\t\ttimeout = animationTimeout;\n\t\t\tpropCount = animationDurations.length;\n\t\t}\n\t} else {\n\t\ttimeout = Math.max(transitionTimeout, animationTimeout);\n\t\ttype =\n\t\t\ttimeout > 0\n\t\t\t\t? transitionTimeout > animationTimeout\n\t\t\t\t\t? 'transition'\n\t\t\t\t\t: 'animation'\n\t\t\t\t: null;\n\t\tpropCount = type\n\t\t\t? type === 'transition'\n\t\t\t\t? transitionDurations.length\n\t\t\t\t: animationDurations.length\n\t\t\t: 0;\n\t}\n\n\treturn {\n\t\ttype,\n\t\ttimeout,\n\t\tpropCount\n\t};\n}\n\nfunction calculateTimeout(delays: string[], durations: string[]) {\n\twhile (delays.length < durations.length) {\n\t\tdelays = delays.concat(delays);\n\t}\n\n\treturn Math.max(...durations.map((duration, i) => toMs(duration) + toMs(delays[i])));\n}\n","import { getDataFromHtml } from '../helpers';\nimport Swup from '../Swup';\nimport { PageHtmlData } from '../helpers/getDataFromHtml';\n\nexport type PageData = PageHtmlData & {\n\tresponseURL: string;\n};\nexport const getPageData = function (this: Swup, request: XMLHttpRequest): PageData | null {\n\t// this method can be replaced in case other content than html is expected to be received from server\n\t// this function should always return { title, pageClass, originalContent, blocks, responseURL }\n\t// in case page has invalid structure - return null\n\tconst html = request.responseText;\n\tconst pageHtmlData = getDataFromHtml(html, this.options.containers);\n\n\tif (!pageHtmlData) {\n\t\tconsole.warn('[swup] Received page is invalid.');\n\t\treturn null;\n\t}\n\n\treturn {\n\t\t...pageHtmlData,\n\t\tresponseURL: request.responseURL || window.location.href\n\t};\n};\n","import Swup from '../Swup';\nimport { fetch } from '../helpers';\nimport { TransitionOptions } from './loadPage';\nimport { PageRecord } from './Cache';\n\nexport function fetchPage(this: Swup, data: TransitionOptions): Promise<PageRecord> {\n\tconst headers = this.options.requestHeaders;\n\tconst { url } = data;\n\n\tif (this.cache.exists(url)) {\n\t\tthis.triggerEvent('pageRetrievedFromCache');\n\t\treturn Promise.resolve(this.cache.getPage(url));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tfetch({ ...data, headers }, (response) => {\n\t\t\tif (response.status === 500) {\n\t\t\t\tthis.triggerEvent('serverError');\n\t\t\t\treject(url);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// get json data\n\t\t\tconst page = this.getPageData(response);\n\t\t\tif (!page || !page.blocks.length) {\n\t\t\t\treject(url);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// render page\n\t\t\tconst cacheablePageData = { ...page, url };\n\t\t\tthis.cache.cacheUrl(cacheablePageData);\n\t\t\tthis.triggerEvent('pageLoaded');\n\t\t\tresolve(cacheablePageData);\n\t\t});\n\t});\n}\n","import Swup from '../Swup';\nimport { PageRenderOptions } from './renderPage';\n\nexport const leavePage = function (this: Swup, { event, skipTransition }: PageRenderOptions = {}) {\n\tconst isHistoryVisit = event instanceof PopStateEvent;\n\n\tif (skipTransition) {\n\t\tthis.triggerEvent('animationSkipped');\n\t\treturn [Promise.resolve()];\n\t}\n\n\tthis.triggerEvent('animationOutStart');\n\n\t// handle classes\n\tdocument.documentElement.classList.add('is-changing', 'is-leaving', 'is-animating');\n\tif (isHistoryVisit) {\n\t\tdocument.documentElement.classList.add('is-popstate');\n\t}\n\n\t// animation promise stuff\n\tconst animationPromises: Promise<void>[] = this.getAnimationPromises('out');\n\tPromise.all(animationPromises).then(() => {\n\t\tthis.triggerEvent('animationOutDone');\n\t});\n\n\treturn animationPromises;\n};\n","import { classify, createHistoryRecord, getCurrentUrl } from '../helpers';\nimport Swup from '../Swup';\nimport { PageRecord } from './Cache';\n\nexport type TransitionOptions = {\n\turl: string;\n\tcustomTransition?: string;\n};\n\nexport type PageLoadOptions = {\n\turl: string;\n\tevent?: PopStateEvent;\n\tcustomTransition?: string;\n};\n\nexport function loadPage(this: Swup, data: TransitionOptions) {\n\tconst { url } = data;\n\n\t// Check if the visit should be ignored\n\tif (this.shouldIgnoreVisit(url)) {\n\t\twindow.location.href = url;\n\t} else {\n\t\tthis.performPageLoad(data);\n\t}\n}\n\nexport function performPageLoad(this: Swup, data: PageLoadOptions) {\n\tconst { url, event, customTransition } = data ?? {};\n\n\tconst isHistoryVisit = event instanceof PopStateEvent;\n\tconst skipTransition = this.shouldSkipTransition({ url, event });\n\n\tthis.triggerEvent('transitionStart', event);\n\n\t// set transition object\n\tthis.updateTransition(getCurrentUrl(), url, customTransition);\n\tif (customTransition != null) {\n\t\tdocument.documentElement.classList.add(`to-${classify(customTransition)}`);\n\t}\n\n\t// start/skip animation\n\tconst animationPromises = this.leavePage({ event, skipTransition });\n\n\t// Load page data\n\tconst fetchPromise = this.fetchPage(data);\n\n\t// create history record if this is not a popstate call (with or without anchor)\n\tif (!isHistoryVisit) {\n\t\tcreateHistoryRecord(url + (this.scrollToElement || ''));\n\t}\n\n\tthis.currentPageUrl = getCurrentUrl();\n\n\t// when everything is ready, render the page\n\tPromise.all<PageRecord | void>([fetchPromise, ...animationPromises])\n\t\t.then(([pageData]) => {\n\t\t\tthis.renderPage(pageData as PageRecord, { event, skipTransition });\n\t\t})\n\t\t.catch((errorUrl) => {\n\t\t\t// Return early if errorUrl is not defined (probably aborted preload request)\n\t\t\tif (errorUrl === undefined) return;\n\n\t\t\t// Rewrite `skipPopStateHandling` to redirect manually when `history.go` is processed\n\t\t\tthis.options.skipPopStateHandling = () => {\n\t\t\t\twindow.location = errorUrl;\n\t\t\t\treturn true;\n\t\t\t};\n\n\t\t\t// Go back to the actual page we're still at\n\t\t\thistory.go(-1);\n\t\t});\n}\n","/**\n * Perform the replacement of content after loading a page.\n *\n * This method can be replaced or augmented by plugins to allow pausing.\n *\n * It takes an object with the page data as return from `getPageData` and has to\n * return a Promise that resolves once all content has been replaced and the\n * site is ready to start animating in the new page.\n *\n * @param {object} page The page object\n * @returns Promise\n */\nexport const replaceContent = function ({ blocks, title }: { blocks: string[]; title: string }) {\n\t// Replace content blocks\n\tblocks.forEach((html, i) => {\n\t\t// we know the block exists at this point\n\t\tconst block = document.body.querySelector(`[data-swup=\"${i}\"]`)!;\n\t\tblock.outerHTML = html;\n\t});\n\n\t// Update browser title\n\tdocument.title = title;\n\n\t// Return a Promise to allow plugins to defer\n\treturn Promise.resolve();\n};\n","import Swup from '../Swup';\nimport delegate from 'delegate-it';\n\ntype HandlersEventMap = {\n\tanimationInDone: undefined;\n\tanimationInStart: undefined;\n\tanimationOutDone: undefined;\n\tanimationOutStart: undefined;\n\tanimationSkipped: undefined;\n\tclickLink: delegate.Event<MouseEvent>;\n\tcontentReplaced: PopStateEvent | undefined;\n\tdisabled: undefined;\n\tenabled: undefined;\n\topenPageInNewTab: delegate.Event<MouseEvent>;\n\tpageLoaded: undefined;\n\tpageRetrievedFromCache: undefined;\n\tpageView: PopStateEvent | undefined;\n\tpopState: PopStateEvent;\n\tsamePage: delegate.Event<MouseEvent>;\n\tsamePageWithHash: delegate.Event<MouseEvent>;\n\tserverError: undefined;\n\ttransitionStart: PopStateEvent | undefined;\n\ttransitionEnd: PopStateEvent | undefined;\n\twillReplaceContent: PopStateEvent | undefined;\n};\ntype AvailableEventNames = keyof HandlersEventMap;\n\nexport type Handler<T extends keyof HandlersEventMap> = (event: HandlersEventMap[T]) => void;\nexport type Handlers = {\n\t[Key in keyof HandlersEventMap]: Handler<Key>[];\n};\n\nexport function on<TEventType extends AvailableEventNames>(\n\tthis: Swup,\n\tevent: TEventType,\n\thandler: Handler<TEventType>\n): void {\n\tconst eventHandlers = this._handlers[event] as Handler<TEventType>[];\n\n\tif (eventHandlers) {\n\t\teventHandlers.push(handler);\n\t} else {\n\t\tconsole.warn(`Unsupported event ${event}.`);\n\t}\n}\n\nexport function off<TEventType extends AvailableEventNames>(\n\tthis: Swup,\n\tevent?: TEventType,\n\thandler?: Handler<TEventType>\n) {\n\tif (event && handler) {\n\t\tconst eventHandlers = this._handlers[event] as Handler<TEventType>[];\n\t\t// Remove specific handler\n\t\tif (eventHandlers.includes(handler)) {\n\t\t\t(this._handlers[event] as Handler<TEventType>[]) = eventHandlers.filter(\n\t\t\t\t(h) => h !== handler\n\t\t\t);\n\t\t} else {\n\t\t\tconsole.warn(`Handler for event '${event}' not found.`);\n\t\t}\n\t} else if (event) {\n\t\t// Remove all handlers for specific event\n\t\tthis._handlers[event] = [];\n\t} else {\n\t\t// Remove all handlers for all events\n\t\tObject.keys(this._handlers).forEach((event) => {\n\t\t\tthis._handlers[event as keyof HandlersEventMap] = [];\n\t\t});\n\t}\n}\n\nexport function triggerEvent<TEventType extends AvailableEventNames>(\n\tthis: Swup,\n\teventName: TEventType,\n\toriginalEvent?: HandlersEventMap[TEventType]\n): void {\n\tconst eventHandlers = this._handlers[eventName] as Handler<TEventType>[];\n\n\t// call saved handlers with \"on\" method and pass originalEvent object if available\n\teventHandlers.forEach((handler) => {\n\t\ttry {\n\t\t\thandler(originalEvent as HandlersEventMap[TEventType]);\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t});\n\n\t// trigger event on document with prefix \"swup:\"\n\tconst event = new CustomEvent(`swup:${eventName}`, { detail: eventName });\n\tdocument.dispatchEvent(event);\n}\n","import Swup from '../Swup';\n\nexport type Plugin = {\n\tname: string;\n\tisSwupPlugin: true;\n\tmount: () => void;\n\tunmount: () => void;\n\n\t// the instance is assigned later on after passing to swup\n\tswup?: Swup;\n\n\t// these are possibly undefined for backward compatibility\n\tversion?: string;\n\trequires?: Record<string, string>;\n\t_beforeMount?: () => void;\n\t_afterUnmount?: () => void;\n\t_checkRequirements?: () => boolean;\n};\n\nconst isSwupPlugin = (maybeInvalidPlugin: unknown): maybeInvalidPlugin is Plugin => {\n\t// @ts-ignore\n\treturn maybeInvalidPlugin?.isSwupPlugin;\n};\n\nexport const use = function (this: Swup, plugin: unknown) {\n\tif (!isSwupPlugin(plugin)) {\n\t\tconsole.error('Not a swup plugin instance', plugin);\n\t\treturn;\n\t}\n\n\tplugin.swup = this;\n\tif (plugin._checkRequirements) {\n\t\tif (!plugin._checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (plugin._beforeMount) {\n\t\tplugin._beforeMount();\n\t}\n\tplugin.mount();\n\n\tthis.plugins.push(plugin);\n\n\treturn this.plugins;\n};\n\nexport function unuse(this: Swup, pluginOrName: Plugin | string) {\n\tconst plugin = this.findPlugin(pluginOrName);\n\tif (!plugin) {\n\t\tconsole.error('No such plugin', plugin);\n\t\treturn;\n\t}\n\n\tplugin.unmount();\n\tif (plugin._afterUnmount) {\n\t\tplugin._afterUnmount();\n\t}\n\n\tthis.plugins = this.plugins.filter((p) => p !== plugin);\n\n\treturn this.plugins;\n}\n\nexport function findPlugin(this: Swup, pluginOrName: Plugin | string) {\n\treturn this.plugins.find((plugin) => plugin === pluginOrName || plugin.name === pluginOrName);\n}\n","import { Location, updateHistoryRecord, getCurrentUrl } from '../helpers';\nimport Swup from '../Swup';\nimport { PageRecord } from './Cache';\n\nexport type PageRenderOptions = {\n\tevent?: PopStateEvent;\n\tskipTransition?: boolean;\n};\n\nexport const renderPage = function (\n\tthis: Swup,\n\tpage: PageRecord,\n\t{ event, skipTransition }: PageRenderOptions = {}\n) {\n\tdocument.documentElement.classList.remove('is-leaving');\n\n\t// do nothing if another page was requested in the meantime\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), page.url)) {\n\t\treturn;\n\t}\n\n\tconst { url } = Location.fromUrl(page.responseURL);\n\n\t// update cache and state if the url was redirected\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), url)) {\n\t\tthis.cache.cacheUrl({ ...page, url });\n\t\tthis.currentPageUrl = getCurrentUrl();\n\t\tupdateHistoryRecord(url);\n\t}\n\n\t// only add for page loads with transitions\n\tif (!skipTransition) {\n\t\tdocument.documentElement.classList.add('is-rendering');\n\t}\n\n\tthis.triggerEvent('willReplaceContent', event);\n\n\tthis.replaceContent(page).then(() => {\n\t\tthis.triggerEvent('contentReplaced', event);\n\t\tthis.triggerEvent('pageView', event);\n\n\t\t// empty cache if it's disabled (in case preload plugin filled it)\n\t\tif (!this.options.cache) {\n\t\t\tthis.cache.empty();\n\t\t}\n\n\t\t// Perform in transition\n\t\tthis.enterPage({ event, skipTransition });\n\n\t\t// reset scroll-to element\n\t\tthis.scrollToElement = null;\n\t});\n};\n","import Swup from '../Swup';\n\nexport function updateTransition(this: Swup, from: string, to: string, custom?: string): void {\n\tthis.transition = { from, to, custom };\n}\n\nexport function shouldSkipTransition(this: Swup, { event }: { url?: string; event?: Event }) {\n\tconst isHistoryVisit = event instanceof PopStateEvent;\n\treturn !!(isHistoryVisit && !this.options.animateHistoryBrowsing);\n}\n","import delegate from 'delegate-it';\n\nimport version from './config/version';\n\nimport {\n\tcleanupAnimationClasses,\n\tdelegateEvent,\n\tgetCurrentUrl,\n\tLocation,\n\tmarkSwupElements,\n\tupdateHistoryRecord\n} from './helpers';\nimport { Unsubscribe } from './helpers/delegateEvent';\n\nimport { Cache } from './modules/Cache';\nimport { enterPage } from './modules/enterPage';\nimport { getAnchorElement } from './modules/getAnchorElement';\nimport { getAnimationPromises } from './modules/getAnimationPromises';\nimport { getPageData } from './modules/getPageData';\nimport { fetchPage } from './modules/fetchPage';\nimport { leavePage } from './modules/leavePage';\nimport { loadPage, performPageLoad } from './modules/loadPage';\nimport { replaceContent } from './modules/replaceContent';\nimport { on, off, triggerEvent, Handlers } from './modules/events';\nimport { use, unuse, findPlugin, Plugin } from './modules/plugins';\nimport { renderPage } from './modules/renderPage';\nimport { updateTransition, shouldSkipTransition } from './modules/transitions';\n\nimport { queryAll } from './utils';\n\nexport type Transition = {\n\tfrom?: string;\n\tto?: string;\n\tcustom?: string;\n};\n\ntype DelegatedListeners = {\n\tclick?: Unsubscribe;\n};\n\nexport type Options = {\n\tanimateHistoryBrowsing: boolean;\n\tanimationSelector: string | false;\n\tlinkSelector: string;\n\tcache: boolean;\n\tcontainers: string[];\n\trequestHeaders: Record<string, string>;\n\tplugins: Plugin[];\n\tskipPopStateHandling: (event: any) => boolean;\n\tignoreVisit: (url: string, { el, event }: { el?: Element; event?: Event }) => boolean;\n\tresolveUrl: (url: string) => string;\n};\n\nexport default class Swup {\n\tversion = version;\n\n\t_handlers: Handlers = {\n\t\tanimationInDone: [],\n\t\tanimationInStart: [],\n\t\tanimationOutDone: [],\n\t\tanimationOutStart: [],\n\t\tanimationSkipped: [],\n\t\tclickLink: [],\n\t\tcontentReplaced: [],\n\t\tdisabled: [],\n\t\tenabled: [],\n\t\topenPageInNewTab: [],\n\t\tpageLoaded: [],\n\t\tpageRetrievedFromCache: [],\n\t\tpageView: [],\n\t\tpopState: [],\n\t\tsamePage: [],\n\t\tsamePageWithHash: [],\n\t\tserverError: [],\n\t\ttransitionStart: [],\n\t\ttransitionEnd: [],\n\t\twillReplaceContent: []\n\t};\n\n\t// variable for anchor to scroll to after render\n\tscrollToElement: string | null = null;\n\t// variable for save options\n\toptions: Options;\n\t// running plugin instances\n\tplugins: Plugin[] = [];\n\t// variable for current transition info object\n\ttransition: Transition = {};\n\t// cache instance\n\tcache: Cache;\n\t// allows us to compare the current and new path inside popStateHandler\n\tcurrentPageUrl = getCurrentUrl();\n\t// variable for keeping event listeners from \"delegate\"\n\tdelegatedListeners: DelegatedListeners = {};\n\t// so we are able to remove the listener\n\tboundPopStateHandler: (event: PopStateEvent) => void;\n\n\tloadPage = loadPage;\n\tperformPageLoad = performPageLoad;\n\tleavePage = leavePage;\n\trenderPage = renderPage;\n\treplaceContent = replaceContent;\n\tenterPage = enterPage;\n\ttriggerEvent = triggerEvent;\n\tdelegateEvent = delegateEvent;\n\ton = on;\n\toff = off;\n\tupdateTransition = updateTransition;\n\tshouldSkipTransition = shouldSkipTransition;\n\tgetAnimationPromises = getAnimationPromises;\n\tgetPageData = getPageData;\n\tfetchPage = fetchPage;\n\tgetAnchorElement = getAnchorElement;\n\tlog: (message: string, context?: any) => void = () => {}; // here so it can be used by plugins\n\tuse = use;\n\tunuse = unuse;\n\tfindPlugin = findPlugin;\n\tgetCurrentUrl = getCurrentUrl;\n\tcleanupAnimationClasses = cleanupAnimationClasses;\n\n\tdefaults: Options = {\n\t\tanimateHistoryBrowsing: false,\n\t\tanimationSelector: '[class*=\"transition-\"]',\n\t\tcache: true,\n\t\tcontainers: ['#swup'],\n\t\tignoreVisit: (url, { el, event } = {}) => !!el?.closest('[data-no-swup]'),\n\t\tlinkSelector: 'a[href]',\n\t\tplugins: [],\n\t\tresolveUrl: (url) => url,\n\t\trequestHeaders: {\n\t\t\t'X-Requested-With': 'swup',\n\t\t\tAccept: 'text/html, application/xhtml+xml'\n\t\t},\n\t\tskipPopStateHandling: (event) => event.state?.source !== 'swup'\n\t};\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\t// Merge defaults and options\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\tthis.boundPopStateHandler = this.popStateHandler.bind(this);\n\n\t\tthis.cache = new Cache(this);\n\n\t\tthis.enable();\n\t}\n\n\tenable() {\n\t\t// Check for Promise support\n\t\tif (typeof Promise === 'undefined') {\n\t\t\tconsole.warn('Promise is not supported');\n\t\t\treturn;\n\t\t}\n\n\t\t// Add event listeners\n\t\tthis.delegatedListeners.click = delegateEvent(\n\t\t\tthis.options.linkSelector,\n\t\t\t'click',\n\t\t\tthis.linkClickHandler.bind(this)\n\t\t);\n\n\t\twindow.addEventListener('popstate', this.boundPopStateHandler);\n\n\t\t// Initial save to cache\n\t\tif (this.options.cache) {\n\t\t\t// Disabled to avoid caching modified dom state: logic moved to preload plugin\n\t\t\t// https://github.com/swup/swup/issues/475\n\t\t}\n\n\t\t// Mark swup blocks in html\n\t\tmarkSwupElements(document.documentElement, this.options.containers);\n\n\t\t// Mount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.use(plugin));\n\n\t\t// Modify initial history record\n\t\tupdateHistoryRecord();\n\n\t\t// Trigger enabled event\n\t\tthis.triggerEvent('enabled');\n\n\t\t// Add swup-enabled class to html tag\n\t\tdocument.documentElement.classList.add('swup-enabled');\n\n\t\t// Trigger page view event\n\t\tthis.triggerEvent('pageView');\n\t}\n\n\tdestroy() {\n\t\t// remove delegated listeners\n\t\tthis.delegatedListeners.click!.destroy();\n\n\t\t// remove popstate listener\n\t\twindow.removeEventListener('popstate', this.boundPopStateHandler);\n\n\t\t// empty cache\n\t\tthis.cache.empty();\n\n\t\t// unmount plugins\n\t\tthis.options.plugins.forEach((plugin) => {\n\t\t\tthis.unuse(plugin);\n\t\t});\n\n\t\t// remove swup data atributes from blocks\n\t\tqueryAll('[data-swup]').forEach((element) => {\n\t\t\telement.removeAttribute('data-swup');\n\t\t});\n\n\t\t// remove handlers\n\t\tthis.off();\n\n\t\t// trigger disable event\n\t\tthis.triggerEvent('disabled');\n\n\t\t// remove swup-enabled class from html tag\n\t\tdocument.documentElement.classList.remove('swup-enabled');\n\t}\n\n\tshouldIgnoreVisit(href: string, { el, event }: { el?: Element; event?: Event } = {}) {\n\t\tconst { origin, url, hash } = Location.fromUrl(href);\n\n\t\t// Ignore if the new origin doesn't match the current one\n\t\tif (origin !== window.location.origin) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the link/form would open a new window (or none at all)\n\t\tif (el && this.triggerWillOpenNewWindow(el)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the visit should be ignored as per user options\n\t\tif (this.options.ignoreVisit(url + hash, { el, event })) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Finally, allow the visit\n\t\treturn false;\n\t}\n\n\tlinkClickHandler(event: delegate.Event<MouseEvent>) {\n\t\tconst linkEl = event.delegateTarget;\n\t\tconst { href, url, hash } = Location.fromElement(linkEl as HTMLAnchorElement);\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { el: linkEl, event })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if control key pressed\n\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) {\n\t\t\tthis.triggerEvent('openPageInNewTab', event);\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if other than left mouse button\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.triggerEvent('clickLink', event);\n\t\tevent.preventDefault();\n\n\t\t// Handle links to the same page and exit early, where applicable\n\t\tif (!url || url === getCurrentUrl()) {\n\t\t\tthis.handleLinkToSamePage(url, hash, event);\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(url, getCurrentUrl())) return;\n\n\t\t// Store the element that should be scrolled to after loading the next page\n\t\tthis.scrollToElement = hash || null;\n\n\t\t// Get the custom transition name, if present\n\t\tconst customTransition = linkEl.getAttribute('data-swup-transition') || undefined;\n\n\t\t// Finally, proceed with loading the page\n\t\tthis.performPageLoad({ url, customTransition });\n\t}\n\n\thandleLinkToSamePage(url: string, hash: string, event: delegate.Event<MouseEvent>) {\n\t\t// Emit event and exit early if the url points to the same page without hash\n\t\tif (!hash) {\n\t\t\tthis.triggerEvent('samePage', event);\n\t\t\treturn;\n\t\t}\n\n\t\t// link to the same URL with hash\n\t\tthis.triggerEvent('samePageWithHash', event);\n\n\t\tconst element = getAnchorElement(hash);\n\n\t\t// Warn and exit early if no matching element was found for the hash\n\t\tif (!element) {\n\t\t\treturn console.warn(`Element for offset not found (#${hash})`);\n\t\t}\n\n\t\tupdateHistoryRecord(url + hash);\n\t}\n\n\ttriggerWillOpenNewWindow(triggerEl: Element) {\n\t\tif (triggerEl.matches('[download], [target=\"_blank\"]')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpopStateHandler(event: PopStateEvent) {\n\t\t// Exit early if this event should be ignored\n\t\tif (this.options.skipPopStateHandling(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(getCurrentUrl(), this.currentPageUrl)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst href = event.state?.url ?? location.href;\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { event })) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { url, hash } = Location.fromUrl(href);\n\n\t\tif (hash) {\n\t\t\tthis.scrollToElement = hash;\n\t\t} else {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\tthis.triggerEvent('popState', event);\n\n\t\tif (!this.options.animateHistoryBrowsing) {\n\t\t\tdocument.documentElement.classList.remove('is-animating');\n\t\t\tcleanupAnimationClasses();\n\t\t}\n\n\t\tthis.performPageLoad({ url, event });\n\t}\n\n\t/**\n\t * Utility function to validate and run the global option 'resolveUrl'\n\t * @param {string} url\n\t * @returns {string} the resolved url\n\t */\n\tresolveUrl(url: string) {\n\t\tif (typeof this.options.resolveUrl !== 'function') {\n\t\t\tconsole.warn(`[swup] options.resolveUrl expects a callback function.`);\n\t\t\treturn url;\n\t\t}\n\t\tconst result = this.options.resolveUrl(url);\n\t\tif (!result || typeof result !== 'string') {\n\t\t\tconsole.warn(`[swup] options.resolveUrl needs to return a url`);\n\t\t\treturn url;\n\t\t}\n\t\tif (result.startsWith('//') || result.startsWith('http')) {\n\t\t\tconsole.warn(`[swup] options.resolveUrl needs to return a relative url`);\n\t\t\treturn url;\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * Compares the resolved version of two paths and returns true if they are the same\n\t * @param {string} url1\n\t * @param {string} url2\n\t * @returns {boolean}\n\t */\n\tisSameResolvedUrl(url1: string, url2: string) {\n\t\treturn this.resolveUrl(url1) === this.resolveUrl(url2);\n\t}\n}\n"],"names":["classify","text","fallback","String","toLowerCase","replace","getCurrentUrl","hash","location","pathname","search","createHistoryRecord","url","customData","data","_extends","random","Math","source","history","pushState","updateHistoryRecord","state","replaceState","delegateEvent","selector","type","callback","_ref","base","document","eventOptions","delegation","delegate","destroy","query","context","querySelector","queryAll","Array","from","querySelectorAll","nextTick","requestAnimationFrame","escapeCssIdentifier","ident","window","CSS","escape","toMs","s","Number","slice","getDataFromHtml","html","containers","_query","_query2","fakeDom","createElement","innerHTML","blocks","forEach","console","warn","length","item","index","setAttribute","push","outerHTML","innerText","className","title","pageClass","originalContent","fetch","options","defaults","method","headers","request","XMLHttpRequest","onreadystatechange","readyState","open","Object","entries","key","header","setRequestHeader","send","Location","URL","constructor","baseURI","super","toString","this","static","el","href","getAttribute","markSwupElements","element","isSwupClass","test","includes","cleanupAnimationClasses","removeClasses","documentElement","split","filter","classList","remove","Cache","swup","pages","last","getCacheUrl","resolveUrl","fromUrl","cacheUrl","page","responseURL","log","keys","getPage","getCurrentPage","exists","empty","enterPage","event","skipTransition","triggerEvent","Promise","resolve","animationPromises","getAnimationPromises","all","then","getAnchorElement","charAt","substring","decodeURIComponent","transitionProp","transitionEndEvent","animationProp","animationEndEvent","animationType","animationSelector","animatedElements","body","map","expectedType","timeout","propCount","getComputedStyle","transitionDuration","animationDuration","transitionDelays","styles","transitionDurations","transitionTimeout","calculateTimeout","animationDelays","animationDelay","animationDurations","animationTimeout","max","getTransitionInfo","endEvent","startTime","performance","now","propsTransitioned","end","removeEventListener","onEnd","target","elapsedTime","isTransitionOrAnimationEvent","Error","setTimeout","addEventListener","getAnimationPromiseForElement","delays","durations","concat","duration","i","undefined","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","getPageData","pageHtmlData","responseText","fetchPage","requestHeaders","cache","reject","response","status","cacheablePageData","leavePage","isHistoryVisit","PopStateEvent","add","loadPage","shouldIgnoreVisit","performPageLoad","customTransition","shouldSkipTransition","updateTransition","fetchPromise","scrollToElement","currentPageUrl","pageData","renderPage","catch","errorUrl","skipPopStateHandling","go","replaceContent","handler","eventHandlers","_handlers","off","h","eventName","originalEvent","error","CustomEvent","detail","dispatchEvent","use","plugin","maybeInvalidPlugin","isSwupPlugin","_checkRequirements","_beforeMount","mount","plugins","unuse","pluginOrName","findPlugin","unmount","_afterUnmount","p","find","name","isSameResolvedUrl","to","custom","transition","animateHistoryBrowsing","Swup","version","animationInDone","animationInStart","animationOutDone","animationOutStart","animationSkipped","clickLink","contentReplaced","disabled","enabled","openPageInNewTab","pageLoaded","pageRetrievedFromCache","pageView","popState","samePage","samePageWithHash","serverError","transitionStart","transitionEnd","willReplaceContent","delegatedListeners","boundPopStateHandler","on","ignoreVisit","closest","linkSelector","Accept","_event$state","popStateHandler","bind","enable","click","linkClickHandler","removeAttribute","origin","triggerWillOpenNewWindow","linkEl","delegateTarget","fromElement","metaKey","ctrlKey","shiftKey","altKey","button","preventDefault","handleLinkToSamePage","triggerEl","matches","_event$state$url","_event$state2","result","startsWith","url1","url2"],"mappings":"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"}